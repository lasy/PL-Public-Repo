label = paste0("n = ",reprod_obj_sum$pregnancy_id),
col = reprod_obj),
hjust = 1, vjust = 1
)+
scale_x_continuous(breaks = viz$xaxis_m*28, minor_breaks = viz$xaxis_s*7,
labels = viz$xaxis_m*4, limits = c(0,lt_weeks*7), expand = c(0,0))+
ylab("% of cycles")+ xlab("pregnancy duration (in weeks)")+ # ylab("% of cycles")
scale_fill_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
scale_color_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
facet_grid(reprod_obj_text ~ .)+
theme(legend.position = "bottom")+
guides(fill = FALSE, col = FALSE)
g_hist_lt
g_hist_lt = ggplot(pregnancies[pregnancies$preg_type == 1,],
aes(x = preg_duration, fill = reprod_obj)) +
geom_vline(xintercept = dict$pregnancy_timeline$duration_in_days[dict$pregnancy_timeline$duration_in_weeks <= lt_weeks],
col = "gray", linetype = 2)+
geom_histogram(aes(y = ..density..), binwidth = 7, position = "identity", alpha = 0.5)+ #
geom_text(data = reprod_obj_sum,
aes(x = Inf, y = Inf,
label = paste0("n = ",reprod_obj_sum$pregnancy_id),
col = reprod_obj_text),
hjust = 1, vjust = 1
)+
scale_x_continuous(breaks = viz$xaxis_m*28, minor_breaks = viz$xaxis_s*7,
labels = viz$xaxis_m*4, limits = c(0,lt_weeks*7), expand = c(0,0))+
ylab("% of cycles")+ xlab("pregnancy duration (in weeks)")+ # ylab("% of cycles")
scale_fill_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
scale_color_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
facet_grid(reprod_obj_text ~ .)+
theme(legend.position = "bottom")+
guides(fill = FALSE, col = FALSE)
g_hist_lt
reprod_obj_sum = aggregate(pregnancy_id ~ reprod_obj_text, pregnancies[pregnancies$preg_type == 1,], lu)
g_hist_lt = ggplot(pregnancies[pregnancies$preg_type == 1,],
aes(x = preg_duration, fill = reprod_obj)) +
geom_vline(xintercept = dict$pregnancy_timeline$duration_in_days[dict$pregnancy_timeline$duration_in_weeks <= lt_weeks],
col = "gray", linetype = 2)+
geom_histogram(aes(y = ..density..), binwidth = 7, position = "identity", alpha = 0.5)+ #
geom_text(data = reprod_obj_sum,
aes(x = Inf, y = Inf,
label = paste0("n = ",reprod_obj_sum$pregnancy_id),
col = reprod_obj_text),
hjust = 1, vjust = 1
)+
scale_x_continuous(breaks = viz$xaxis_m*28, minor_breaks = viz$xaxis_s*7,
labels = viz$xaxis_m*4, limits = c(0,lt_weeks*7), expand = c(0,0))+
ylab("% of cycles")+ xlab("pregnancy duration (in weeks)")+ # ylab("% of cycles")
scale_fill_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
scale_color_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
facet_grid(reprod_obj_text ~ .)+
theme(legend.position = "bottom")+
guides(fill = FALSE, col = FALSE)
g_hist_lt
g_hist_lt = ggplot(pregnancies[pregnancies$preg_type == 1,],
aes(x = preg_duration)) +
geom_vline(xintercept = dict$pregnancy_timeline$duration_in_days[dict$pregnancy_timeline$duration_in_weeks <= lt_weeks],
col = "gray", linetype = 2)+
geom_histogram(aes(y = ..density.. , fill = reprod_obj), binwidth = 7, position = "identity", alpha = 0.5)+ #
geom_text(data = reprod_obj_sum,
aes(x = Inf, y = Inf,
label = paste0("n = ",reprod_obj_sum$pregnancy_id),
col = reprod_obj_text),
hjust = 1, vjust = 1
)+
scale_x_continuous(breaks = viz$xaxis_m*28, minor_breaks = viz$xaxis_s*7,
labels = viz$xaxis_m*4, limits = c(0,lt_weeks*7), expand = c(0,0))+
ylab("% of cycles")+ xlab("pregnancy duration (in weeks)")+ # ylab("% of cycles")
scale_fill_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
scale_color_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
facet_grid(reprod_obj_text ~ .)+
theme(legend.position = "bottom")+
guides(fill = FALSE, col = FALSE)
g_hist_lt
ggsave(filename = paste0(IO$panels, "pregnancy durations.pdf"), g_hist_lt, width = 7, height = 6)
agg_preg_outcomes = aggregate(pregnancy_id ~ preg_outcome + preg_outcome_cat + reprod_obj,
pregnancies[pregnancies$preg_type == 1,], lu) %>%  #
set_colnames(c("preg_outcome","preg_outcome_cat","reprod_obj","n_preg"))
agg_preg_outcomes_sum = aggregate(n_preg ~  reprod_obj, agg_preg_outcomes, sum )
agg_preg_outcomes$tot_n_preg = agg_preg_outcomes_sum$n_preg[match(agg_preg_outcomes$reprod_obj, agg_preg_outcomes_sum$reprod_obj)]
agg_preg_outcomes = mutate(agg_preg_outcomes, perc_preg = n_preg/tot_n_preg)
agg_preg_outcomes_max = aggregate(perc_preg ~ preg_outcome + reprod_obj, agg_preg_outcomes, sum )
g = ggplot() +
geom_bar(data = agg_preg_outcomes,
aes(x = preg_outcome, y = perc_preg, fill = preg_outcome_cat), stat = "identity")+
geom_text(data = agg_preg_outcomes_max,
aes(x = preg_outcome,
y = perc_preg,
label = paste0(round(100*perc_preg),"%"),
col = preg_outcome),
fill = NULL, vjust = -0.5)+
geom_text(data = agg_preg_outcomes_sum,
aes(x = 0.2, y = Inf,
label = paste0("n: ",n_preg)),
fill = NULL, vjust = +1, hjust = 0)+
xlab("Pregnancy outcome")+ ylab("% cycles")+
scale_fill_manual(values = dict$pregnancy_outcomes$colors)+
scale_color_manual(values = dict$pregnancy_timeline$colors[-which(dict$pregnancy_timeline$abbreviation == "TB noBF")])+
scale_y_continuous(labels=percent)+
facet_grid(reprod_obj ~ . )+
guides(fill = FALSE, col = FALSE)
g
ggsave(filename = paste0(IO$panels, "pregnancy outcomes with reprod obj.pdf"), g, width = 5, height = 5)
g = ggplot() +
geom_bar(data = agg_preg_outcomes,
aes(x = preg_outcome, y = perc_preg, fill = preg_outcome_cat), stat = "identity")+
geom_text(data = agg_preg_outcomes_max,
aes(x = preg_outcome,
y = perc_preg,
label = paste0(round(100*perc_preg),"%"),
col = preg_outcome),
fill = NULL, vjust = -0.5)+
xlab("Pregnancy outcome")+ ylab("% cycles")+
scale_fill_manual(values = dict$pregnancy_outcomes$colors)+
scale_color_manual(values = dict$pregnancy_timeline$colors[-which(dict$pregnancy_timeline$abbreviation == "TB noBF")])+
scale_y_continuous(labels=percent)+
facet_grid(reprod_obj ~ . )+
guides(fill = FALSE, col = FALSE)
g
g = ggplot() +
geom_bar(data = agg_preg_outcomes,
aes(x = preg_outcome, y = perc_preg, fill = preg_outcome_cat), stat = "identity")+
geom_text(data = agg_preg_outcomes_max,
aes(x = preg_outcome,
y = perc_preg,
label = paste0(round(100*perc_preg),"%"),
col = preg_outcome),
fill = NULL, vjust = -0.5)+
geom_blank(data=agg_preg_outcomes_max, aes(x=preg_outcome, y=perc_preg*1.1))+
xlab("Pregnancy outcome")+ ylab("% pregnancies")+
scale_fill_manual(values = dict$pregnancy_outcomes$colors)+
scale_color_manual(values = dict$pregnancy_timeline$colors[-which(dict$pregnancy_timeline$abbreviation == "TB noBF")])+
scale_y_continuous(labels=percent)+
facet_grid(reprod_obj ~ . )+
guides(fill = FALSE, col = FALSE)
g
g = ggplot() +
geom_bar(data = agg_preg_outcomes,
aes(x = preg_outcome, y = perc_preg, fill = preg_outcome_cat), stat = "identity")+
geom_text(data = agg_preg_outcomes_max,
aes(x = preg_outcome,
y = perc_preg,
label = paste0(round(100*perc_preg),"%"),
col = preg_outcome),
fill = NULL, vjust = -0.5)+
geom_blank(data=agg_preg_outcomes_max, aes(x=preg_outcome, y=perc_preg*1.1))+
xlab("Pregnancy outcome")+ ylab("% pregnancies")+
scale_fill_manual(values = dict$pregnancy_outcomes$colors)+
scale_color_manual(values = dict$pregnancy_timeline$colors[-which(dict$pregnancy_timeline$abbreviation == "TB noBF")])+
scale_y_continuous(labels=percent)+
facet_grid(reprod_obj ~ . )+
guides(fill = FALSE, col = FALSE)
g
ggsave(filename = paste0(IO$panels, "pregnancy outcomes with reprod obj.pdf"), g, width = 5, height = 6)
g_hist_lt = ggplot(pregnancies[pregnancies$preg_type == 1,],
aes(x = preg_duration)) +
geom_vline(xintercept = dict$pregnancy_timeline$duration_in_days[dict$pregnancy_timeline$duration_in_weeks <= lt_weeks],
col = "gray", linetype = 2)+
geom_histogram(aes(y = ..density.. , fill = reprod_obj), binwidth = 7, position = "identity", alpha = 0.5)+ #
geom_text(data = reprod_obj_sum,
aes(x = Inf, y = Inf,
label = paste0("n = ",reprod_obj_sum$pregnancy_id),
col = reprod_obj_text),
hjust = 1, vjust = 1
)+
scale_x_continuous(breaks = viz$xaxis_m*28, minor_breaks = viz$xaxis_s*7,
labels = viz$xaxis_m*4, limits = c(0,lt_weeks*7), expand = c(0,0))+
ylab("% of pregnancies")+ xlab("pregnancy duration (in weeks)")+ # ylab("% of cycles")
scale_fill_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
scale_color_manual(name = "Reprod. Obj", values = c("red","royalblue1","turquoise"))+
facet_grid(reprod_obj_text ~ .)+
theme(legend.position = "bottom")+
guides(fill = FALSE, col = FALSE)
g_hist_lt
ggsave(filename = paste0(IO$panels, "pregnancy durations.pdf"), g_hist_lt, width = 7, height = 6)
ggsave(filename = paste0(IO$panels, "pregnancy outcomes with reprod obj.pdf"), g, width = 5, height = 5.7)
pregnancies$reprod_obj_text = c("Avoid Preg.","Get Preg.","Unknown")[match(pregnancies$reprod_obj,c("avoid_preg","get_preg","unknown"))]
agg_preg_outcomes = aggregate(pregnancy_id ~ preg_outcome + preg_outcome_cat + reprod_obj + reprod_obj_text,
pregnancies[pregnancies$preg_type == 1,], lu) %>%  #
set_colnames(c("preg_outcome","preg_outcome_cat","reprod_obj","n_preg"))
agg_preg_outcomes_sum = aggregate(n_preg ~  reprod_obj + reprod_obj_text, agg_preg_outcomes, sum )
pregnancies$reprod_obj_text = c("Avoid Preg.","Get Preg.","Unknown")[match(pregnancies$reprod_obj,c("avoid_preg","get_preg","unknown"))]
agg_preg_outcomes = aggregate(pregnancy_id ~ preg_outcome + preg_outcome_cat + reprod_obj + reprod_obj_text,
pregnancies[pregnancies$preg_type == 1,], lu) %>%  #
set_colnames(c("preg_outcome","preg_outcome_cat","reprod_obj","reprod_obj_text","n_preg"))
agg_preg_outcomes_sum = aggregate(n_preg ~  reprod_obj + reprod_obj_text, agg_preg_outcomes, sum )
agg_preg_outcomes$tot_n_preg = agg_preg_outcomes_sum$n_preg[match(agg_preg_outcomes$reprod_obj, agg_preg_outcomes_sum$reprod_obj)]
agg_preg_outcomes = mutate(agg_preg_outcomes, perc_preg = n_preg/tot_n_preg)
agg_preg_outcomes_max = aggregate(perc_preg ~ preg_outcome + reprod_obj + reprod_obj_text, agg_preg_outcomes, sum )
g = ggplot() +
geom_bar(data = agg_preg_outcomes,
aes(x = preg_outcome, y = perc_preg, fill = preg_outcome_cat), stat = "identity")+
geom_text(data = agg_preg_outcomes_max,
aes(x = preg_outcome,
y = perc_preg,
label = paste0(round(100*perc_preg),"%"),
col = preg_outcome),
fill = NULL, vjust = -0.5)+
geom_blank(data=agg_preg_outcomes_max, aes(x=preg_outcome, y=perc_preg*1.1))+
xlab("Pregnancy outcome")+ ylab("% pregnancies")+
scale_fill_manual(values = dict$pregnancy_outcomes$colors)+
scale_color_manual(values = dict$pregnancy_timeline$colors[-which(dict$pregnancy_timeline$abbreviation == "TB noBF")])+
scale_y_continuous(labels=percent)+
facet_grid(reprod_obj_text ~ . )+
guides(fill = FALSE, col = FALSE)
g
ggsave(filename = paste0(IO$panels, "pregnancy outcomes with reprod obj.pdf"), g, width = 5, height = 5.7)
users$is_type_1_user
j = which(users$user_type == 1)
length(j)
u = users[j,]
table(u$n_LB, u$n_PL)
table(u$n_LB)
table(u$n_PL)
j = which((u$n_LB + u$n_PL)>0)
#table(u$n_LB[j], u$n_PL[j])
table(u$n_LB[j])
round(table(u$n_LB[j])/sum(table(u$n_LB[j])) * 100, 2)
table(u$n_PL[j])
round(table(u$n_PL[j])/sum(table(u$n_PL[j])) * 100, 2)
length(j)
sum(u$n_PL[j])/sum(u$app_usage_duration_in_years[j])
sum(u$n_PL[j])/length(j)
table(u$n_LB[j])
round(table(u$n_LB[j])/sum(table(u$n_LB[j])) * 100, 2)
table(u$n_PL[j])
round(table(u$n_PL[j])/sum(table(u$n_PL[j])) * 100, 2)
users$LB_rate = users$n_LB/users$app_usage_duration_in_years
hist(users$LB_rate)
users$PL_rate = users$n_PL/users$app_usage_duration_in_years
hist(users$PL_rate)
g_live_births_rate = ggplot(users[which(users$user_type == 1),], aes(x = LB_rate))+
geom_histogram(aes(y = ..count../sum(..count..)),binwidth = 1/20, fill = "seagreen3")+
ylab("% of users")+xlab("# of live births / app usage duration in years")+
scale_y_continuous(breaks = seq(0,1,1/10), labels = percent)+
scale_x_continuous(limits = c(-0.15,2.15))
g_live_births_rate
g_PL_rate = ggplot(users[which(users$user_type == 1),], aes(x = PL_rate))+
geom_histogram(aes(y = ..count../sum(..count..)),binwidth = 1/20, fill = "orange")+
ylab("% of users")+xlab("# of pregnancy loss / app usage duration in years")+
scale_y_continuous(breaks = seq(0,1,1/10), labels = percent)+
scale_x_continuous(limits = c(-0.15,2.15))
g_PL_rate
g = grid.arrange(g_live_births_rate, g_PL_rate)
ggsave(filename = paste0(IO$panels, "live birth and PL rate.pdf"), g, width = 5, height = 5)
never_had_PL = (users$is_type_1_user) & (users$n_PL == 0) & (users$n_LB > 0)
had_PL = (users$is_type_1_user) & (users$n_PL > 0)
users$had_PL = NA
users$had_PL[had_PL] = TRUE
users$had_PL[never_had_PL] = FALSE
ggplot(users[!is.na(users$had_PL),], aes(x = n_cycles_after_last_preg, fill = had_PL))+
geom_histogram(position = "identity",binwidth = 1, alpha = 0.5)
aggregate(n_cycles_after_last_preg ~ had_PL, users, mean )
never_had_PL = (users$user_type == 1) & (users$n_PL == 0) & (users$n_LB > 0)
had_PL = (users$user_type == 1) & (users$n_PL > 0)
users$had_PL = NA
users$had_PL[had_PL] = TRUE
users$had_PL[never_had_PL] = FALSE
ggplot(users[!is.na(users$had_PL),], aes(x = n_cycles_after_last_preg, fill = had_PL))+
geom_histogram(position = "identity",binwidth = 1, alpha = 0.5)
aggregate(n_cycles_after_last_preg ~ had_PL, users, mean )
aggregate(n_cycles_after_last_preg ~ had_PL, users, median )
which(!is.na(users$first_preg_outcome_simple))
users = read_feather(path = paste0(IO$output_data,"users.feather"))
users$any_PL = ifelse(users$n_PL>0, "Yes", ifelse(users$n_LB>0,"No",NA))
u = users[which(!is.na(users$first_preg_outcome_simple)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_app,
data = u,
family = "binomial")
summary(glm_cl)
users$reprod_obj_at_first_pregnancy = pregnancies$reprod_obj[match(paste0(users$user_id, "_",users$first_cycle_preg),pregnancies$pregnancy_id)]
table(users$reprod_obj_at_first_pregnancy, users$reprod_obj_app)
write_feather(users, path = paste0(IO$output_data,"users.feather"))
file.copy(from = paste0(IO$output_data,"users.feather"), to = paste0(IO$tmp_data,"users_with_reprod_obj_at_first_pregnancy.feather"), overwrite = TRUE)
users$any_PL = ifelse(users$n_PL>0, "Yes", ifelse(users$n_LB>0,"No",NA))
u = users[which(!is.na(users$first_preg_outcome_simple)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
users$reprod_obj_at_first_pregnancy = factor(users$reprod_obj_at_first_pregnancy, levels = c("unknow","avoid_preg","get_preg"))
u = users[which(!is.na(users$first_preg_outcome_simple)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
table(users$reprod_obj_at_first_pregnancy)
users$reprod_obj_at_first_pregnancy = pregnancies$reprod_obj[match(paste0(users$user_id, "_",users$first_cycle_preg),pregnancies$pregnancy_id)]
users$any_PL = ifelse(users$n_PL>0, "Yes", ifelse(users$n_LB>0,"No",NA))
users$reprod_obj_at_first_pregnancy = factor(users$reprod_obj_at_first_pregnancy, levels = c("unknown","avoid_preg","get_preg"))
u = users[which(!is.na(users$first_preg_outcome_simple)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
?glm
users$any_PL = ifelse(users$n_PL>0, "Yes", ifelse(users$n_LB>0,"No",NA))
users$reprod_obj_at_first_pregnancy = factor(users$reprod_obj_at_first_pregnancy, levels = c("unknown","avoid_preg","get_preg"))
u = users[which(!is.na(users$first_preg_outcome_simple) & (users$user_type == 1)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
library(nnet)
multinom_res = multinom(preg_outcomes ~ current_age, reprod_obj,
data = pregnancies[pregnancies$preg_type == 1])
multinom_res = multinom(preg_outcomes ~ current_age, reprod_obj,
data = pregnancies[pregnancies$preg_type == 1,])
colnames(pregnancies)
multinom_res = multinom(preg_outcome ~ current_age, reprod_obj + cycle_nb,
data = pregnancies[pregnancies$preg_type == 1,])
multinom_res = multinom(preg_outcome ~ current_age + reprod_obj + cycle_nb,
data = pregnancies[pregnancies$preg_type == 1,])
multinom_res
pregnancies$reprod_obj = factor(pregnancies$reprod_obj, levels = c("unknown","avoid_preg","get_preg"))
multinom_res = multinom(preg_outcome ~ current_age + reprod_obj + cycle_nb,
data = pregnancies[pregnancies$preg_type == 1,])
multinom_res
users$any_PL = ifelse(users$n_PL>0, "Yes", ifelse(users$n_LB>0,"No",NA))
users$reprod_obj_at_first_pregnancy = factor(users$reprod_obj_at_first_pregnancy, levels = c("unknown","avoid_preg","get_preg"))
u = users[which(!is.na(users$first_preg_outcome_simple) & (users$user_type == 1)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
u$is_first_preg_a_PL = ifelse(u$is_first_preg_a_PL,"Yes","No")
g = ggplot(u, aes(x = median_cycle_length_4, fill = is_first_preg_a_PL))+
geom_histogram(aes(y = ..density..), col = NA, alpha = 0.3, position = "identity", binwidth = 1)+
scale_x_continuous(breaks = viz$xaxis_j, limits = c(14,70))+
scale_fill_manual(name = "Does 1st pregnancy end up in a preg. loss?", values = c("blue","red"))+
xlab("median cycle length before first positive preg. test")+
theme(legend.position = "top")
g
ggsave(filename = paste0(IO$panels, "median_cycle_length_before_first_preg.pdf"), g, width = 5, height = 5)
g = ggplot(u, aes(x = sd_cycle_length_4, fill = is_first_preg_a_PL))+
geom_histogram(aes(y = ..density..), col = NA, alpha = 0.3, position = "identity", binwidth = 0.5)+
scale_x_continuous(breaks = viz$xaxis_j, limits = c(0,42))+
scale_fill_manual(name = "Does 1st pregnancy end up in a preg. loss?", values = c("blue","red"))+
xlab("standard deviation in cycle length before 1st pos. preg. test")+
theme(legend.position = "top")
g
ggsave(filename = paste0(IO$panels, "sd_cycle_length_before_first_preg.pdf"), g, width = 5, height = 5)
g = ggplot(u, aes(x = log10(sd_cycle_length_4), fill = is_first_preg_a_PL))+
geom_histogram(aes(y = ..density..), col = NA, alpha = 0.3, position = "identity", binwidth = 0.1)+
#scale_x_continuous(breaks = log10(viz$xaxis_j))+ # , limits = c(0,42)
scale_fill_manual(name = "Does 1st pregnancy end up in a preg. loss?", values = c("blue","red"))+
xlab("standard deviation (log10) in cycle length before 1st pos. preg. test")+
theme(legend.position = "top")
g
ggsave(filename = paste0(IO$panels, "log10_sd_cycle_length_before_first_preg.pdf"), g, width = 5, height = 5)
qqplot(x=  u$median_cycle_length_4[which(u$is_first_preg_a_PL == "Yes")],
y = u$median_cycle_length_4[which(u$is_first_preg_a_PL == "No")],
pch = 16, cex = 0.5, col = rgb(0,0,0,0.3),
xlim = c(0,50), ylim = c(0,50))
abline(a = 0, b = 1)
qqplot(x=  u$sd_cycle_length_4[which(u$is_first_preg_a_PL == "Yes")],
y = u$sd_cycle_length_4[which(u$is_first_preg_a_PL == "No")],
pch = 16, cex = 0.5, col = rgb(0,0,0,0.3),
xlim = c(0,42), ylim = c(0,42),
main = "cycle length variability",
xlab = "1st preg. ends up in a PL", ylab = "1st preg. ends up in a LB")
abline(a = 0, b = 1)
g = ggplot(u, aes(x = first_cycle_preg-1, fill = is_first_preg_a_PL))+
geom_histogram(aes(y = ..density..), col = NA, alpha = 0.3, position = "identity", binwidth = 1)+
scale_fill_manual(name = "Does 1st pregnancy end up in a preg. loss?", values = c("blue","red"))+
xlab("# of cycles before getting pregnant")+
theme(legend.position = "top")
g
ggsave(filename = paste0(IO$panels, "number_of_cycles_before_first_preg.pdf"), g, width = 5, height = 5)
qqplot(x=  u$first_cycle_preg[which(u$is_first_preg_a_PL == "Yes")],
y = u$first_cycle_preg[which(u$is_first_preg_a_PL == "No")],
pch = 16, cex = 0.5, col = rgb(0,0,0,0.3),
xlim = c(0,80), ylim = c(0,80),
main = "# of cycles before getting pregnant",
xlab = "1st preg. ends up in a PL", ylab = "1st preg. ends up in a LB")
abline(a = 0, b = 1)
g = ggplot(u, aes(x = time_to_first_pos_test, fill = is_first_preg_a_PL))+
geom_histogram(aes(y = ..density..), col = NA, alpha = 0.3, position = "identity", binwidth = 1/12)+
scale_fill_manual(name = "Does 1st pregnancy end up in a preg. loss?", values = c("blue","red"))+
xlab("# of years before 1st positive preg. test")+ xlim(0,5)+
theme(legend.position = "top")
g
ggsave(filename = paste0(IO$panels, "time_before_first_preg.pdf"), g, width = 5, height = 5)
qqplot(x=  u$time_to_first_pos_test[which(u$is_first_preg_a_PL == "Yes")],
y = u$time_to_first_pos_test[which(u$is_first_preg_a_PL == "No")],
pch = 16, cex = 0.5, col = rgb(0,0,0,0.3),
xlim = c(0,5), ylim = c(0,5),
main = "time before getting pregnant",
xlab = "1st preg. ends up in a PL", ylab = "1st preg. ends up in a LB")
abline(a = 0, b = 1)
ddply(u,
c("is_first_preg_a_PL"),
summarize,
mean_time_before_first_pos_test = mean(time_to_first_pos_test, na.rm = TRUE),
median_time_before_first_pos_test = median(time_to_first_pos_test, na.rm = TRUE))
g = ggplot(u, aes(x = age_at_first_pregnancy, fill = is_first_preg_a_PL))+
geom_histogram(aes(y = ..density..), col = NA, alpha = 0.3, position = "identity", binwidth = 1)+
scale_fill_manual(name = "Does 1st pregnancy end up in a preg. loss?", values = c("blue","red"))+
xlab("age of users")+
theme(legend.position = "top")
g
ggsave(filename = paste0(IO$panels, "age_of_users.pdf"), g, width = 5, height = 5)
qqplot(x=  u$age_at_first_pregnancy[which(u$is_first_preg_a_PL == "Yes")],
y = u$age_at_first_pregnancy[which(u$is_first_preg_a_PL == "No")],
pch = 16, cex = 0.5, col = rgb(0,0,0,0.3),
xlim = c(15,55), ylim = c(15,55),
main = "age of users",
xlab = "1st preg. ends up in a PL", ylab = "1st preg. ends up in a LB")
abline(a = 0, b = 1)
table(cycles$reprod_obj_app, cycles$n_insemination > 0)
table(cycles$reprod_obj_app, cycles$n_insemination > 0)/apply(table(cycles$reprod_obj_app, cycles$n_insemination > 0)
, 1, sum)
tt = table( pregnancies$preg_outcome[pregnancies$preg_type == 1])
tt
round(100*tt/sum(tt))
users$any_PL = ifelse(users$n_PL>0, "Yes", ifelse(users$n_LB>0,"No",NA))
users$reprod_obj_at_first_pregnancy = factor(users$reprod_obj_at_first_pregnancy, levels = c("unknown","avoid_preg","get_preg"))
u = users[which(!is.na(users$first_preg_outcome_simple) & (users$user_type == 1)),]
u$is_first_preg_a_PL = (u$first_preg_outcome_simple == "PL")
glm_cl = glm(
is_first_preg_a_PL ~
sd_cycle_length_4+
median_cycle_length_4+
time_to_first_pos_test +
age_at_first_pregnancy+
reprod_obj_at_first_pregnancy,
data = u,
family = "binomial")
summary(glm_cl)
ddply(u,
c("is_first_preg_a_PL"),
summarize,
mean_median_cycle_length_4 = mean(median_cycle_length_4, na.rm = TRUE),
median_median_cycle_length_4 = median(median_cycle_length_4, na.rm = TRUE))
ddply(u,
c("is_first_preg_a_PL"),
summarize,
mean_median_cycle_length_4 = mean(median_cycle_length_4, na.rm = TRUE),
median_median_cycle_length_4 = median(median_cycle_length_4, na.rm = TRUE))
ddply(u,
c("is_first_preg_a_PL"),
summarize,
mean_median_cycle_length_4 = mean(median_cycle_length_4, na.rm = TRUE),
median_median_cycle_length_4 = median(median_cycle_length_4, na.rm = TRUE),
sd_median_cycle_length_4 = sd(median_cycle_length_4, na.rm = TRUE))
ddply(u,
c("is_first_preg_a_PL"),
summarize,
mean_median_cycle_length_4 = mean(median_cycle_length_4, na.rm = TRUE),
median_median_cycle_length_4 = median(median_cycle_length_4, na.rm = TRUE),
sd_median_cycle_length_4 = sd(median_cycle_length_4, na.rm = TRUE))
load(paste0(IO$tmp_data,"days_selected_users.Rdata"), verbose = TRUE)
user_ids = unique(days$user_id)
for(user in user_ids){
cat("\n",user, "\n")
d = days[which((days$user_id == user) & (days$cycle_nb >= 2)),]
plot.tracking.history(d = d, show_tests = TRUE, average_temp = FALSE)
pdf(file = paste0(IO$panels,"example_",user,".pdf"), width = 9, height = 3.5)
plot.tracking.history(d = d, show_tests = TRUE, average_temp = FALSE)
dev.off()
}
